1. Выполнял работу один

2. Идея решения : Моделирование чата(консольного приложения), где данные пользователей и сообщений хранятся в оперативной памяти программы. 
Все реализованно, с помощью использования классов, в которых реализованны оссновные необходимые функции.

3.Программа состоит из двух основных в классов и управляющего цикла в функции run().

3.1. Класс User

Класс описывает пользователя чата.

Основные поля:

login — уникальный логин пользователя

password — пароль для авторизации

name — отображаемое имя пользователя

inbox[MAX_MESSAGES] — массив входящих сообщений

inboxCount — текущее количество сообщений во входящих

Основные методы:

getLogin(), getPassword(), getName() — геттеры для доступа к полям

addMessage(const string& msg) — добавляет новое сообщение во входящие

showInbox() — отображает и очищает входящие сообщения

Назначение:
Хранение информации о пользователе и управление его входящими сообщениями.

3.2 Класс Chat

Класс управляет всей логикой приложения.

Основные поля:

users[MAX_USERS] — список всех пользователей

usersCount — количество зарегистрированных пользователей

loggedInUser — указатель на текущего авторизованного пользователя

Основные методы:

registerUser() — регистрация нового пользователя

login() — авторизация существующего пользователя

logout() — выход из аккаунта

sendMessage() — отправка личного или общего сообщения

checkMessages() — проверка входящих сообщений текущего пользователя

findUserByLogin(const string& login) — поиск пользователя по логину

run() — основной цикл программы с меню

Назначение:
Управление пользователями, отправкой сообщений и обработкой действий в консольном интерфейсе.